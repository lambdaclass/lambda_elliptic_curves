[package]
name = "lambdaworks-math"
description = "Modular math library for cryptography"
version.workspace = true
edition.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
rand = { version = "0.8.5", default-features = false }
thiserror = { version = "1.0.38", optional = true }

# rayon
rayon = { version = "1.7.0", optional = true }
heapless = "0.7.16"

# metal
metal = { version = "0.24.0", optional = true }
objc = { version = "0.2.7", optional = true }

# cuda
cudarc = { version = "0.9.7", optional = true }

lambdaworks-gpu = { workspace = true, optional = true }

[dev-dependencies]
proptest = "1.1.0"
criterion = "0.4"
const-random = "0.1.15"
iai-callgrind.workspace = true

[features]
rayon = ["dep:rayon"]
default = ["rayon", "std"]
std = ["dep:thiserror"]

# gpu
metal = [
    "dep:metal",
    "dep:objc",
    "dep:lambdaworks-gpu",
    "lambdaworks-gpu?/metal",
]
cuda = ["dep:cudarc", "dep:lambdaworks-gpu"]

[[bench]]
name = "criterion_elliptic_curve"
harness = false

[[bench]]
name = "criterion_polynomial"
harness = false

[[bench]]
name = "iai_polynomial"
harness = false

[[bench]]
name = "criterion_field"
harness = false

[[bench]]
name = "iai_field"
harness = false

[[bench]]
name = "criterion_msm"
harness = false
required-features = ["rayon"]

[[bench]]
name = "criterion_fft"
harness = false

[[bench]]
name = "iai_fft"
harness = false

[[bench]]
name = "criterion_metal"
harness = false
required-features = ["metal"]
