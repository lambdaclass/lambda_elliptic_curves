name: Criterion benchmarks

on:
  push:
    branches: [ main ]

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  criterion_bench:
    name: Run (Ubuntu)
    runs-on: ubuntu-20.04
    env:
      CARGO_TERM_COLOR: always
    steps:
    - name: Install Rust 1.66.1 
      uses: actions-rs/toolchain@v1
      with:
          toolchain: 1.66.1 
          override: true
    - uses: actions/checkout@v3
    - name: Run benchmark
      run: |
        cargo bench --no-fail-fast --bench "criterion_fft" \
                                   --bench "criterion_polynomial" \
                                   --bench "criterion_stark" \
        -- --output-format bencher | tee output.txt
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'cargo'
        output-file-path: output.txt
        benchmark-data-dir-path: "./bench"
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # Push and deploy GitHub pages branch automatically
        auto-push: ${{ github.event_name != 'pull_request' }}
  criterion_bench_macos:
    name: Run (macOS, Apple sillicon)
    runs-on: [self-hosted, macOS]
    env:
      CARGO_TERM_COLOR: always
    steps:
    - name: Install Rust 1.66.1
      uses: actions-rs/toolchain@v1
      with:
          toolchain: 1.66.1
          override: true
    - uses: actions/checkout@v3
    - name: Run benchmark
      run: |
        cargo bench --no-fail-fast --bench "criterion_metal" \
        -- --output-format bencher | tee output.txt
    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'cargo'
        output-file-path: output.txt
        benchmark-data-dir-path: "./bench"
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # Push and deploy GitHub pages branch automatically
        auto-push: ${{ github.event_name != 'pull_request' }}
